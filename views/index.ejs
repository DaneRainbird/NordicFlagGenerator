<!DOCTYPE html>

<head>
    <title>Random Nordic Flag | Home</title>
    <link rel="icon" type="image/x-icon" href="img/favicon.ico">

    <!-- Meta Tags-->
    <meta name="title" content="Random Nordic Flag Generator">
    <meta name="description"
        content="Generator for a random Nordic-styled flag with an ficticious country name generated by a Markov Chain.">
    <meta name="keywords" content="nordic,flag,markov,generator,country">
    <meta name="robots" content="index, follow">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta name="language" content="English">
    <meta name="author" content="Dane Rainbird (hello@danerainbird.me)">

    <!-- Stylesheets -->
    <link rel="stylesheet" href="css/main.css" type="text/css">
</head>

<body>
    <!-- Begin Navbar -->
    <header>
        <a class="logo">Nordic Flag Generator</a>
        <nav class="navbar">
            <ul class="nav-links">
                <li><a href="/">Home</a></li>
                <li><a href="/about">About</a></li>
            </ul>
        </nav>
    </header>
    <!-- End Navbar -->

    <!-- Begin Main Content -->
    <div class="container">
        <div class="content">
            <h1>Your Random Nordic Flag</h1>
            <canvas id="flag_canvas" height="300px" width="450px"></canvas>
            <br />
            <p>
                <%= countryName %>
            </p>
        </div>
    </div>
    <!-- End Main Content -->

    <!-- Footer -->
    <footer class="footer">
        <p>&copy; <a href="http://danerainbird.me" target="_blank">Dane Rainbird</a> 2021</p>
    </footer>
    <!-- End Footer -->

    <!-- Canvas Scripts -->
    <script>
        // On body load, draw the flag onto the canvas
        window.onload = () => {
            // Get Canvas Element 
            var canvas = document.getElementById('flag_canvas');
            var ctx = canvas.getContext('2d');

            // Draw top-left corner rectangle
            ctx.fillStyle = '<%= colours[0] %>';
            ctx.fillRect(50, 0, 60, 60);

            // Draw bottom-left corner rectangle
            ctx.fillStyle = '<%= colours[0] %>';
            ctx.fillRect(50, 100, 60, 60);

            // Draw top-right corner rectangle
            ctx.fillStyle = '<%= colours[0] %>';
            ctx.fillRect(150, 0, 100, 60);

            // Draw bottom-right corner rectangle
            ctx.fillStyle = '<%= colours[0] %>';
            ctx.fillRect(150, 100, 100, 60);

            // Draw vertical line
            ctx.fillStyle = '<%= colours[1] %>';
            ctx.fillRect(120, 0, 20, 150);

            // Draw horizontal line
            ctx.fillStyle = '<%= colours[1] %>';
            ctx.fillRect(50, 70, 200, 20);

            <% if (heartEasterEggEnabled) { %>
                // Draw a heart
                console.log("easter egg");
                x = 79;
                y = 70;

                drawHeart(ctx, x, y, x + 50, y + 50, 20, 20, 'red');
            <% } %>
        }

        // Draw a heart on specific names, or when easterEgg is enabled
        function drawHeart(ctx, fromx, fromy, tox, toy, lw, hlen, color) {
            var x = fromx;
            var y = fromy;
            var width = lw;
            var height = hlen;

            ctx.save();
            ctx.beginPath();
            var topCurveHeight = height * 0.3;
            ctx.moveTo(x, y + topCurveHeight);
            // top left curve
            ctx.bezierCurveTo(
                x, y,
                x - width / 2, y,
                x - width / 2, y + topCurveHeight
            );

            // bottom left curve
            ctx.bezierCurveTo(
                x - width / 2, y + (height + topCurveHeight) / 2,
                x, y + (height + topCurveHeight) / 2,
                x, y + height
            );

            // bottom right curve
            ctx.bezierCurveTo(
                x, y + (height + topCurveHeight) / 2,
                x + width / 2, y + (height + topCurveHeight) / 2,
                x + width / 2, y + topCurveHeight
            );

            // top right curve
            ctx.bezierCurveTo(
                x + width / 2, y,
                x, y,
                x, y + topCurveHeight
            );

            ctx.closePath();
            ctx.fillStyle = color;
            ctx.fill();
            ctx.restore();
        }
    </script>
</body>